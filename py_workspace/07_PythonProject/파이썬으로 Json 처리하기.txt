 WikiDocs
07-5 파이썬으로 Json 처리하기
json 이란?
json dumps, loads
json file
json 송수신
json 이란?
json(JavaScript Object Notation)은 원래 자바스크립트에서 만들어진 데이터 표현방식으로 최근들어 사용이 부쩍 증가되고 있다. 예전에는 xml방식의 데이터 교환을 많이 했다면 요새는 거의 json으로 하는 추세이다.

json은 파이썬의 딕셔너리와 매우 비슷하게 생겼다.

json 표현의 예

{
    "name": "홍길동",
    "birth": "0525",
    "age": 30
}
json dumps, loads
파이썬 자료형을 json 문자열로 만드는 방법에 대해서 알아보자.

먼저 json을 사용하기 위해서 json 모듈을 import 해야 한다.

>>> import json
json문자열을 만들기 위해서는 json 모듈의 dumps 함수를 이용하면 된다.

딕셔너리를 json 문자열로 변경해 보자.

>>> j1 = {"name":"홍길동", "birth":"0525", "age": 30}
>>> j1
{'age': 30, 'birth': '0525', 'name': '홍길동'}
>>> json.dumps(j1)
'{"age": 30, "birth": "0525", "name": "\\ubc15\\uc751\\uc6a9"}'
출력되는 json문자열을 보기좋게 정렬하려면 다음처럼 indent 옵션을 추가하면 된다.

>>> print(json.dumps(j1, indent=2))
{
  "age": 30,
  "birth": "0525",
  "name": "\ubc15\uc751\uc6a9"
}
리스트나 튜플도 json 문자열로 변경해 보자.

>>> json.dumps([1,2,3])
'[1, 2, 3]'
>>> json.dumps((4,5,6))
'[4, 5, 6]'
리스트나 튜플은 모두 동일한 Array형태의 json문자열로 변환됨을 알 수 있다.

이번에는 json모듈의 loads 함수를 이용하여 만들어진 json 문자열을 파이썬 객체로 다시 변경해 보자.

>>> j1 = {"name":"홍길동", "birth":"0525", "age": 30}
>>> d1 = json.dumps(j1)
>>> json.loads(d1)
{'name': '홍길동', 'birth': '0525', 'age': 30}
딕셔너리 객체를 json으로 변환(dumps)하고 변환된 json객체를 다시 딕셔너리로 변환(loads)할 수 있다.

json file
이번에는 myinfo.json 이라는 json파일을 파이썬 객체로 읽어보자.

c:/doit/myinfo.json

{
    "name": "홍길동",
    "birth": "0525",
    "age": 30
}
위와 같은 'c:/doit/myinfo.json'이라는 파일을 먼저 작성한 후 다음 예제를 실행해 보자.

>>> with open('c:/doit/myinfo.json') as f:
...     data = json.load(f)
... 
>>> print(type(data))
<class 'dict'>
>>> print(data)
{'name': '홍길동', 'birth': '0525', 'age': 30}
json 파일을 읽을 때는 위 예처럼 loads 대신 load 함수를 이용하는 것이 편리하다. loads는 문자열을 읽어 들이고 load는 파일을 읽어 들이는 json 함수이다.

json 송수신
json은 URL요청시 입출력 데이터로 많이 활용된다. 다음의 간단한 예제를 살펴보자.

import json
import urllib.request

url = "http://ip.jsontest.com"  # URL

d = {'name': '홍길동', 'birth': '0525', 'age': 30}
params = json.dumps(d).encode("utf-8")  # encode: 문자열을 바이트로 변환
req = urllib.request.Request(url, data=params,
                             headers={'content-type': 'application/json'})
response = urllib.request.urlopen(req)
print(response.read().decode('utf8'))  # decode: 바이트를 문자열로 변환
위 예제는 http://ip.jsontest.com 이라는 URL에 json요청을 보내고 그 응답으로 json을 리턴받아 출력하는 예제이다. 아마도 위 예제를 수행하면 호출한 PC의 IP 주소가 출력될 것이다. (참고. http://ip.jsontest.com 은 호출한 클라이언트의 아이피를 출력해 주는 테스트 서비스이다.)

urllib.request.Request 사용시 json문자열이 아닌 json 바이트 배열로 주고 받아야 한다는 점에 유의하자.